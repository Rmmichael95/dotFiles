;; ** Variables ***********************************************************************

;; System vars
(deflisten BLIGHT `zsh ../scripts/backlight --get`)
(deflisten BATTERY `zsh ../scripts/battery --perc`)
(deflisten BATTERYICON `zsh ../scripts/battery --icon`)
(deflisten VOLUME `zsh ../scripts/audio --get-vol`)
(deflisten VOLUMEICON `zsh ../scripts/audio --get-volicon`)
(deflisten MIC `zsh ../scripts/audio --get-mic`)
(deflisten MICICON `zsh ../scripts/audio --get-micicon`)
(deflisten NET `zsh ../scripts/network`)


;; Music vars
(deflisten SONG `zsh ../scripts/music --song`)
(deflisten ARTIST `zsh ../scripts/music --artist`)
(deflisten STATUS `zsh ../scripts/music --status`)
(deflisten COVER `zsh ../scripts/music --cover`)


;; Calendar vars
(defpoll day :interval "20h" "date '+%d'")
(defpoll year :interval "20h" "date '+%Y'")



;; ** Elements **************************************************************************

;; system sliders
(defwidget sys_sliders []
  (box :class "genwin" :vexpand "false" :hexpand "false" :width 325
    (box :class "slidersbox" :orientation "v" :spacing 10 :halign "center" :valign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
      (box :class "volume_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false"
        (button :width 30 :onclick "zsh ../scripts/audio --toggle-vol"
          (label :class "iconvolume" :text VOLUMEICON))
        (scale :min 0 :max 100 :value VOLUME :active "true" :onchange "zsh ../scripts/audio --set-vol {}"))
      (box :class "mic_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false"
        (button :width 30 :onclick "zsh ../scripts/audio --toggle-mic"
          (label :class "iconmic" :text MICICON))
        (scale :min 0 :max 100 :value MIC :active "true" :onchange "zsh ../scripts/audio --set-mic {}"))
      (box :class "bright_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false"
        (button :width 30 :onclick ""
          (label :width 30 :class "iconbright" :text ""))
        (scale :min 0 :max 255 :value BLIGHT :active "true" :onchange "zsh ../scripts/backlight --set {}")))))



;; battery
(defwidget battery []
  (box :class "genwin" :vexpand "false" :hexpand "false" :width 65
    (box :class "battery" :orientation "v" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false"
        (label :class "baticon" :text BATTERYICON)
        (label :text BATTERY))))


;; network
(defwidget network []
  (box :class "genwin" :vexpand "false" :hexpand "true" :orientation "h" :width 200
    (button :class "btn_net" :onclick "zsh ../scripts/network --toggle" :onmiddleclick ""
      (label :class "network" :text NET))))


;; bluetooth
(defwidget bluetooth []
  (box :class "genwin" :vexpand "false" :hexpand "false" :width 60
    (button :class "btn_bluet" :onclick ""
      (label :text ""))))


;; Power Button
(defwidget powerbutton []
  (box :class "genwin" :vexpand "false" :hexpand "false" :width 60
    (button :class "btn_poweroff" :onclick "zsh ../scripts/powermenu" "")))






;; ** Widgets **************************************************************************

;;system
(defwidget system []
  (box :space-evenly "false" :orientation "v" :spacing 10 :width 400
    (box :class "row" :orientation "h" :space-evenly "false" :spacing 10 :height 60
      (network)
      (bluetooth)
      (powerbutton))
    (box :class "row" :orientation "h" :space-evenly "false" :spacing 10 :height 60
      (battery)
      (sys_sliders))
  ))


;; Music
(defwidget music []
    (box :class "genwin" :orientation "v" :space-evenly "false" :vexpand "false" :hexpand "false"

      (box :class "genwin" :orientation "h" :space-evenly "true" :vexpand "false" :hexpand "false"
        (box :class "album_art" :vexpand "false" :hexpand "false" :style "background-image: url('${COVER}');")
          (box :orientation "v" :width 80
            (label :halign "center" :class "song" :wrap "true" :limit-width 20 :text SONG)
            (label :halign "center" :class "artist" :wrap "true" :limit-width 15 :text ARTIST)))

        (box :orientation "h" :spacing 20 :halign "center" :space-evenly "true" :vexpand "false" :hexpand "false"
          (button :class "btn_prev" :onclick "zsh ../scripts/music --prev" "玲 ")
          (button :class "btn_play" :onclick "zsh ../scripts/music --toggle" STATUS)
          (button :class "btn_next" :onclick "zsh ../scripts/music --next" "怜"))))


;; Calendar
(defwidget cal []
    (box :class "genwin" :orientation "v"
        (calendar :class "cal" :day day :year year)))







;; ******** DASHBOARD ********************************************************************
(defwidget dashboard []
  (box :class "background" :space-evenly "false" :orientation "v" :spacing 15 :width 400
    (system)
    (music)
    (cal)))

;; ** Windows *************************************************************************

(defwindow dashboard :stacking "fg" :focusable "false" :monitor 0 :geometry (geometry :anchor "top right" :x 5 :y 5)
  (dashboard))
