use polars::prelude::*;

fn main() -> PolarsResult<()> {
    let json_path ="/home/ryanm/documents/batcave/climbing/climbing-data/openbeta-routes-ca/ca-routes.jsonlines";

  // let schema = Schema::from(vec![
  //       Field::new("YDS", DataType::Utf8),
  //       Field::new("French", DataType::Utf8),
  //       Field::new("Ewbanks", DataType::Utf8),
  //       Field::new("UIAA", DataType::Utf8),
  //       Field::new("ZA", DataType::Utf8),
  //       Field::new("British", DataType::Utf8),
  //       Field::new("Font", DataType::Utf8),
  //   ]);
    let df = match LazyJsonLineReader::new(json_path.into())
        // .with_schema(schema)
        .finish() {
        Ok(lf) => lf,
        Err(e) => panic!("Error: {}", e),
    }
    .collect();
    println!("{:?}", df);
    Ok(())

    // let mut file = std::fs::File::open(json_path).unwrap();
    // let df = JsonLineReader::new(&mut file).finish().unwrap();

}
