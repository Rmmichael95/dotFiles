from __future__ import print_function

import datetime
import os.path

from google.auth.transport.requests import Request
from google.oauth2.credentials import Credentials
from google_auth_oauthlib.flow import InstalledAppFlow
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError

# If modifying these scopes, delete the file token.json.
SCOPES = ['https://www.googleapis.com/auth/calendar']


def main():
    creds = None
    # The file token.json stores the user's access and refresh tokens, and is
    # created automatically when the authorization flow completes for the first
    # time.
    if os.path.exists('token.json'):
        creds = Credentials.from_authorized_user_file('token.json', SCOPES)
    # If there are no (valid) credentials available, let the user log in.
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            creds.refresh(Request())
        else:
            flow = InstalledAppFlow.from_client_secrets_file(
                'credentials.json', SCOPES)
            creds = flow.run_local_server(port=0)
        # Save the credentials for the next run
        with open('token.json', 'w') as token:
            token.write(creds.to_json())

    try:
        service = build('calendar', 'v3', credentials=creds)

        # Call the Calendar API
        now = datetime.datetime.today().isoformat() + 'Z'  # 'Z' indicates UTC time
        print('Making apts file')
        events_result = service.events().list(calendarId='primary',
                                              timeMin=now, timeMax='2024-01-01T10:00:00Z',
                                              singleEvents=True,
                                              orderBy='startTime').execute()
        events = events_result.get('items', [])

        if not events:
            print('No upcoming events found.')
            return

        # Prints the start and name of the next 10 events
        for event in events:
            start = event['start'].get('dateTime', event['start'].get('date'))
            date = start[5:7] + '/' + start[-2:] + '/' + start[:4]
            sum_len = len(event['summary'])
            with open(os.path.expanduser('~') + "/.local/share/calcurse/apts", "a+") as file:
                found = False

                for line in (l[:-1] for l in file):
                    if not found:
                        if line[0:9] == start and line[-sum_len:] == event['summary']:
                            found = True

                # write event to end of file if not found
                if not found: file.writelines(date + " [1] " + event['summary'] + '\n')

    except HttpError as error:
        print('An error occurred: %s' % error)


if __name__ == '__main__':
    main()
