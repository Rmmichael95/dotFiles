import os
import curses
import subprocess as sp

class Menu():
    def __init__(self, win, items, path="") -> None:
        self.win = win
        self.win.keypad(1)
        self.pos = 0
        self.items = items
        self.path = path

    def navigate(self, n) -> None:
        self.pos += n
        if self.pos < 0:
            self.pos = 0
        elif self.pos >= len(self.items):
            self.pos = len(self.items) - 1

    # def display(self) -> None:
    #     self.

        while True:
            #self.pane.refresh()
            curses.doupdate()
            for index, item in enumerate(self.items):
                if index == self.pos:
                    mode = curses.A_REVERSE
                else:
                    mode = curses.A_NORMAL

                msg = "%s" % (item[0])
                self.win.addstr(1 + index, 1, msg, mode)

            key = self.win.getch()

            if key in [curses.KEY_ENTER, ord("\n")]:
                if self.pos == len(self.items) - 1:
                    break
                else:
                    self.items[self.pos][1]()

            elif key == curses.KEY_UP or chr(key) in ('k', 'K'):
                self.navigate(-1)
                self.path = self.path + self.items[self.pos]

            elif key == curses.KEY_DOWN or chr(key) in ('j', 'J'):
                self.navigate(1)
                self.path = self.path + self.items[self.pos]

            elif key == curses.KEY_LEFT or chr(key) in ('h', 'H'):
                break

            elif key == curses.KEY_RIGHT or chr(key) in ('l', 'L'):
                if self.pos == len(self.items) - 1:
                    break
                else:
                    self.items[self.pos][1]()

            elif chr(key) in ('q', 'Q'):
                quit()

        self.win.refresh()
        curses.doupdate()


class File():
    def __init__(self, path):
        self.path = path

    def open(self) -> None:
        if not os.path.isfile(self.path):
            pass
        else:
            program = "nvim"
            file = self.path
            sp.Popen([program, file])

